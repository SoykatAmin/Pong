import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;


public class main extends JPanel implements ActionListener, MouseListener, KeyListener{
	
	Timer timer = new Timer(2, this);
	
	static Boolean gameover = false;

	static Boolean gamemenu = true;
	
	static Boolean singleplayer = false;
	static Boolean multiplayer = false;

	Boolean player_up = false, player_down = false;
	Boolean player_up1 = false, player_down1 = false;
	
	static int larghezza = 800, altezza = 600;

	int xSingle = (larghezza/2)-50;
	int ySingle = (altezza/2)-70;

	int xMulti = (larghezza/2) - 50;
	int yMulti = (altezza/2);
	
	int x = 0, y = 270;
	
	int velY;
	
	int EneX = 779, EneY = 270;
	
	int velEneY = 0;
	
	int Xball = larghezza/2, Yball = altezza/2;
	
	int BallVelX = 1, BallVelY;

	String p1 = "0", p2 = "0";
	
	int punteggio1, punteggio2;
	
	public void paint (Graphics g) {
		super.paint(g);
		setBackground(Color.BLACK);
		
		if(gameover) {
			
			g.setColor(Color.WHITE);
			g.drawString("Premi un tasto per continuare", (larghezza/2)-80, 20);
			
		}
		if(!gamemenu){
			g.setColor(Color.WHITE);
			g.fillRect(x, y, 5, 70);
			
			g.setColor(Color.WHITE);
			g.fillRect(EneX, EneY, 5, 70);
			
			g.setColor(Color.RED);
			g.fillOval(Xball, Yball, 10, 10);
			
			g.setColor(Color.WHITE);
			g.drawString(p1, 30, 10);
			
			g.setColor(Color.WHITE);
			g.drawString(p2, 730, 10);
		}else {
			g.setColor(Color.WHITE);
			g.drawRect(xSingle, ySingle, 100, 30);

			g.drawString("Singleplayer",xSingle +15 , ySingle + 20);

			g.drawRect(xMulti, yMulti, 100, 30);
			g.drawString("Multiplayer",xMulti +15 , yMulti + 20);


		}
		
	}
	
	
	public main() {
		timer.start();
		addKeyListener(this);
		addMouseListener(this);
		setFocusable(true);
		setFocusTraversalKeysEnabled(false);
	}
	
	public void actionPerformed(ActionEvent e) {
		
		Collisione();
		
		if (y < 0) {
			
			velY = 0;
			y = 0;
				
		}else if (y > 496) {
			
			velY = 0;
			y = 495;
			
		}
		if(EneY < 0) {
			
			velEneY = 0;
			EneY = 0;
			
		}else if (EneY > 496) {
			
			velEneY = 0;
			EneY = 495;
		}
		if (Yball < 0) {
			
			BallVelY = -BallVelY;
				
		}else if (Yball > 570) {
			
			BallVelY = -BallVelY;
			
		}
		
		punteggio1 = Integer.parseInt(p1);
		
		punteggio2 = Integer.parseInt(p2);
		
		if (Xball < 0) {
			
			BallVelY = 0;
			Xball = larghezza/2;
			Yball = altezza/2;
			punteggio2++;
			gameover = true;
				
		}else if (Xball > 800) {
			
			BallVelY = 0;
			Xball = larghezza/2;
			Yball = altezza/2;
			punteggio1++;
			gameover = true;
			
		}
		
		if(gameover) {
			
			Xball = larghezza/2;
			Yball = altezza/2;
			y = 270;
			EneY = 270;


			
		}
		if(singleplayer){

			if(Yball > EneY+35 && Xball > xSingle + 225){

				velEneY = 1;

			}else if (Yball < EneY+35 && Xball > xSingle+225){

				velEneY = -1;

			}else velEneY = 0;
		}
		

		p1 = Integer.toString(punteggio1);
		
		p2 = Integer.toString(punteggio2);
		
		if (!gamemenu){

			y = y + velY;
		
			EneY = EneY + velEneY;

			Xball = Xball + BallVelX;
		
			Yball = Yball + BallVelY;

		}
		
		

		repaint();
	}

	public static void main(String[] args) {
		main pad = new main();
		JFrame frame = new JFrame();
		
		frame.add(pad); 

		frame.setTitle("Paddle");
		frame.setVisible(true);
		frame.setSize(larghezza, altezza);
		frame.setResizable(false);
		//frame.setBackground(Color.BLACK);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		

	}
	
	


	public void keyTyped(KeyEvent e) {
		
		gameover = false;
		
	}

	public void keyPressed(KeyEvent e) {
		
			int c = e.getKeyCode();
			
			if (!gameover && !gamemenu) {
			
				if (multiplayer){
					if (c == KeyEvent.VK_W) {
							player_down = false;
							player_up = true;
							velY = -1; 
						
					}
					if (c == KeyEvent.VK_S) {
						player_up = false;
						player_down = true;
						velY = 1; 
						
					}
					if (c == KeyEvent.VK_UP) {
						player_down1 = false;
						player_up1 = true;
						velEneY = -1; 
						
					}
					if (c == KeyEvent.VK_DOWN)  {
						player_up1 = false;
						player_down1 = true;
						velEneY = 1; 
						
					}
				}else if (singleplayer){
					if (c == KeyEvent.VK_W) {
						player_down = false;
						player_up = true;
						velY = -1; 
					
				}
					if (c == KeyEvent.VK_S) {
						player_up = false;
						player_down = true;
						velY = 1; 
						
					}
				}
		 
			}
		
	}

	public void keyReleased(KeyEvent e) {
		int s = e.getKeyCode();
		if (s == KeyEvent.VK_W)
	    {
			velY = 0;
			player_up = false;
	        
	    }
	 
	
	    if (s == KeyEvent.VK_S)
	    {
			velY = 0;
			player_down = false;
	        
	    }
	    if (s == KeyEvent.VK_UP)
	    {
			velEneY = 0; 
			player_up1 = false;
	        
	    }
	    if (s == KeyEvent.VK_DOWN)  
	    {
			velEneY = 0; 
			player_down1 = false;
	        
	    }
		
		
	}
	
	/*
	 * 
	 * 
	 * 
	 */

	public void mouseClicked(MouseEvent e) {
		if(e.getX() > xSingle && e.getX() < xSingle+100 && e.getY() > ySingle && e.getY() < ySingle+30){
			singleplayer = true;
			gamemenu = false;
		}else if (e.getX() > xMulti && e.getX() < xMulti+100 && e.getY() > yMulti && e.getY() < yMulti+30){
			multiplayer = true;
			gamemenu = false;
		}
	}

	@Override
	public void mousePressed(MouseEvent e) {
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {

	}

	@Override
	public void mouseExited(MouseEvent e) {

	}
	
	public void Collisione() {
		if (Yball >= y && Yball <= y + 70 && Xball == x) {

			BallVelX = - BallVelX;

			if (player_up) {

				BallVelY = -1;

			}else if (player_down) {

				BallVelY = 1;

			}
		}else if (Yball >= EneY && Yball <= EneY + 70 && Xball == EneX-10) {

			BallVelX = - BallVelX;

			if (player_up1) {

				BallVelY = -1;

			}else if (player_down1) {

				BallVelY = 1;
			}
		}
	}

}
